diff -urN ok-nagios-4.0.8/daemon-init.in ok-nagios-4.0.8-revised/daemon-init.in
--- ok-nagios-4.0.8/daemon-init.in	2014-08-12 15:00:01.000000000 +0000
+++ ok-nagios-4.0.8-revised/daemon-init.in	2014-12-15 10:08:27.381597059 +0000
@@ -1,8 +1,8 @@
 #!/bin/sh
 #
-# chkconfig: 345 99 01
+# chkconfig: - 99 01
 # description: Nagios network monitor
-# processname: nagios
+#
 # File : nagios
 #
 # Author : Jorge Sanchez Aymar (jsanchez@lanchile.cl)
@@ -28,120 +28,57 @@
 # Description: Starts and stops the Nagios monitor
 #              used to provide network services status.
 #
-### BEGIN INIT INFO
-# Provides:		nagios
-# Required-Start:	$local_fs $syslog $network
-# Required-Stop:	$local_fs $syslog $network
-# Short-Description:	Starts and stops the Nagios monitoring server
-# Description:		Starts and stops the Nagios monitoring server
-### END INIT INFO
 
-# Our install-time configuration.
-prefix=@prefix@
-exec_prefix=@exec_prefix@
-NagiosBin=@bindir@/nagios
-NagiosCfgFile=@sysconfdir@/nagios.cfg
-NagiosCfgtestFile=@localstatedir@/nagios.configtest
-NagiosStatusFile=@localstatedir@/status.dat
-NagiosRetentionFile=@localstatedir@/retention.dat
-NagiosCommandFile=@localstatedir@/rw/nagios.cmd
-NagiosVarDir=@localstatedir@
-NagiosRunFile=@lockfile@
-NagiosLockDir=/var/lock/subsys
-NagiosLockFile=nagios
-NagiosCGIDir=@sbindir@
-NagiosUser=@nagios_user@
-NagiosGroup=@nagios_grp@
-checkconfig="true"
-
-# Source function library
-# Some *nix do not have an rc.d directory, so do a test first
-if [ -f /etc/rc.d/init.d/functions ]; then
-	. /etc/rc.d/init.d/functions
-elif [ -f /etc/init.d/functions ]; then
-	. /etc/init.d/functions
-elif [ -f /lib/lsb/init-functions ]; then
-	. /lib/lsb/init-functions
-fi
-
-# Load any extra environment variables for Nagios and its plugins.
+# Load any extra environment variables for Nagios and its plugins
 if test -f /etc/sysconfig/nagios; then
 	. /etc/sysconfig/nagios
 fi
 
-# Automate addition of RAMDISK based on environment variables
-USE_RAMDISK=${USE_RAMDISK:-0}
-if test "$USE_RAMDISK" -ne 0 && test "$RAMDISK_SIZE"X != "X"; then
-	ramdisk=`mount |grep "${RAMDISK_DIR} type tmpfs"`
-	if [ "$ramdisk"X == "X" ]; then
-		mkdir -p -m 0755 ${RAMDISK_DIR}
-		mount -t tmpfs -o size=${RAMDISK_SIZE}m tmpfs ${RAMDISK_DIR}
-		mkdir -p -m 0755 ${RAMDISK_DIR}/checkresults
-		chown -R $NagiosUser:$NagiosGroup ${RAMDISK_DIR}
-	fi
-fi
-
-
-check_config ()
-{
-	TMPFILE=$(mktemp /tmp/.configtest.XXXXXXXX)
-	$NagiosBin -vp $NagiosCfgFile > "$TMPFILE"
-	WARN=`grep ^"Total Warnings:" "$TMPFILE" |awk -F: '{print \$2}' |sed s/' '//g`
-	ERR=`grep ^"Total Errors:" "$TMPFILE" |awk -F: '{print \$2}' |sed s/' '//g`
-
-	if test "$WARN" = "0" && test "${ERR}" = "0"; then
-		echo "OK - Configuration check verified" > $NagiosCfgtestFile
-		chmod 0644 $NagiosCfgtestFile
-		chown $NagiosUser:$NagiosGroup $NagiosCfgtestFile
-		/bin/rm "$TMPFILE"
-		return 0
-	elif test "${ERR}" = "0"; then
-		# Write the errors to a file we can have a script watching for.
-		echo "WARNING: Warnings in config files - see log for details: $NagiosCfgtestFile" > $NagiosCfgtestFile
-		egrep -i "(^warning|^error)" "$TMPFILE" >> $NagiosCfgtestFile
-		chmod 0644 $NagiosCfgtestFile
-		chown $NagiosUser:$NagiosGroup $NagiosCfgtestFile
-		/bin/rm "$TMPFILE"
-		return 0
-	else
-		# Write the errors to a file we can have a script watching for.
-		echo "ERROR: Errors in config files - see log for details: $NagiosCfgtestFile" > $NagiosCfgtestFile
-		egrep -i "(^warning|^error)" "$TMPFILE" >> $NagiosCfgtestFile
-		chmod 0644 $NagiosCfgtestFile
-		chown $NagiosUser:$NagiosGroup $NagiosCfgtestFile
-		cat "$TMPFILE"
-		exit 8
-	fi
-}
-
-
 status_nagios ()
 {
+
 	if test -x $NagiosCGI/daemonchk.cgi; then
-		if $NagiosCGI/daemonchk.cgi -l $NagiosRunFile > /dev/null 2>&1; then return 0; fi
+		if $NagiosCGI/daemonchk.cgi -l $NagiosRunFile; then
+		        return 0
+		else
+			return 1
+		fi
 	else
-		if ps -p $NagiosPID > /dev/null 2>&1; then return 0; fi
+		if ps -p $NagiosPID > /dev/null 2>&1; then
+		        return 0
+		else
+			return 1
+		fi
 	fi
 
 	return 1
 }
 
-printstatus_nagios ()
+
+printstatus_nagios()
 {
-	if status_nagios; then
+	status_nagios $1 $2
+	RETVAL=$?
+	if [ $RETVAL = 0 ]; then
 		echo "nagios (pid $NagiosPID) is running..."
 	else
 		echo "nagios is not running"
 	fi
+	return $RETVAL
 }
 
+
 killproc_nagios ()
 {
-	kill -s "$1" $NagiosPID
+
+	kill $2 $NagiosPID
+
 }
 
+
 pid_nagios ()
 {
+
 	if test ! -f $NagiosRunFile; then
 		echo "No lock file found in $NagiosRunFile"
 		exit 1
@@ -151,16 +88,38 @@
 }
 
 
+# Source function library
+# Solaris doesn't have an rc.d directory, so do a test first
+if [ -f /etc/rc.d/init.d/functions ]; then
+	. /etc/rc.d/init.d/functions
+elif [ -f /etc/init.d/functions ]; then
+	. /etc/init.d/functions
+fi
+
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+NagiosBin=@bindir@/nagios
+NagiosCfgFile=@sysconfdir@/nagios.cfg
+NagiosStatusFile=@localstatedir@/status.dat
+NagiosRetentionFile=@localstatedir@/retention.dat
+NagiosCommandFile=@localstatedir@/rw/nagios.cmd
+NagiosVarDir=@localstatedir@
+NagiosRunFile=@lockfile@
+NagiosLockDir=/var/lock/subsys
+NagiosLockFile=nagios
+NagiosCGIDir=/usr/bin
+NagiosUser=nagios
+NagiosGroup=nagios
 
 # Check that nagios exists.
 if [ ! -f $NagiosBin ]; then
-    echo "Executable file $NagiosBin not found. Exiting."
+    echo "Executable file $NagiosBin not found.  Exiting."
     exit 1
 fi
 
 # Check that nagios.cfg exists.
 if [ ! -f $NagiosCfgFile ]; then
-    echo "Configuration file $NagiosCfgFile not found. Exiting."
+    echo "Configuration file $NagiosCfgFile not found.  Exiting."
     exit 1
 fi
 
@@ -169,71 +128,63 @@
 
 	start)
 		echo -n "Starting nagios:"
-
-		if test "$checkconfig" = "true"; then
-			check_config
-			# check_config exits on configuration errors.
-		fi
-
-		if test -f $NagiosRunFile; then
-			NagiosPID=`head -n 1 $NagiosRunFile`
-			if status_nagios; then
-				echo " another instance of nagios is already running."
-				exit 0
-			fi
+		$NagiosBin -v $NagiosCfgFile > /dev/null 2>&1;
+		if [ $? -eq 0 ]; then
+                        touch $NagiosVarDir/nagios.log $NagiosRetentionFile
+                        chown $NagiosUser:$NagiosGroup $NagiosVarDir/nagios.log $NagiosRetentionFile
+			rm -f $NagiosCommandFile
+			touch $NagiosRunFile
+			chown $NagiosUser:$NagiosGroup $NagiosRunFile
+			[ -x /sbin/restorecon ] && /sbin/restorecon $NagiosRunFile
+			$NagiosBin -d $NagiosCfgFile
+			if [ -d $NagiosLockDir ]; then touch $NagiosLockDir/$NagiosLockFile; fi
+			echo " done."
+			exit 0
+		else
+			echo "CONFIG ERROR!  Start aborted.  Check your Nagios configuration."
+			exit 1
 		fi
-
-		touch $NagiosVarDir/nagios.log $NagiosRetentionFile
-		rm -f $NagiosCommandFile
-		touch $NagiosRunFile
-		chown $NagiosUser:$NagiosGroup $NagiosRunFile $NagiosVarDir/nagios.log $NagiosRetentionFile
-		$NagiosBin -d $NagiosCfgFile
-		if [ -d $NagiosLockDir ]; then touch $NagiosLockDir/$NagiosLockFile; fi
-
-		echo " done."
 		;;
 
 	stop)
-		echo -n "Stopping nagios:"
+		echo -n "Stopping nagios: "
 
 		pid_nagios
-		killproc_nagios TERM
+		killproc_nagios nagios
 
-		# now we have to wait for nagios to exit and remove its
-		# own NagiosRunFile, otherwise a following "start" could
-		# happen, and then the exiting nagios will remove the
-		# new NagiosRunFile, allowing multiple nagios daemons
-		# to (sooner or later) run - John Sellens
+ 		# now we have to wait for nagios to exit and remove its
+ 		# own NagiosRunFile, otherwise a following "start" could
+ 		# happen, and then the exiting nagios will remove the
+ 		# new NagiosRunFile, allowing multiple nagios daemons
+ 		# to (sooner or later) run - John Sellens
 		#echo -n 'Waiting for nagios to exit .'
-		for i in 1 2 3 4 5 6 7 8 9 10 ; do
-			if status_nagios > /dev/null; then
-				echo -n '.'
-				sleep 1
-			else
-				break
-			fi
-		done
-		if status_nagios > /dev/null; then
-			echo ''
-			echo 'Warning - nagios did not exit in a timely manner'
-		else
-			echo ' done.'
-		fi
+ 		for i in 1 2 3 4 5 6 7 8 9 10 ; do
+ 		    if status_nagios > /dev/null; then
+ 			echo -n '.'
+ 			sleep 1
+ 		    else
+ 			break
+ 		    fi
+ 		done
+ 		if status_nagios > /dev/null; then
+ 		    echo ''
+ 		    echo 'Warning - nagios did not exit in a timely manner'
+ 		else
+ 		    echo 'done.'
+ 		fi
 
 		rm -f $NagiosStatusFile $NagiosRunFile $NagiosLockDir/$NagiosLockFile $NagiosCommandFile
 		;;
 
 	status)
 		pid_nagios
-		printstatus_nagios
+		printstatus_nagios nagios
+		exit $?
 		;;
 
 	checkconfig)
-		if test "$checkconfig" = "true"; then
-			printf "Running configuration check...\n"
-			check_config
-		fi
-
+		printf "Running configuration check..."
+		$NagiosBin -v $NagiosCfgFile > /dev/null 2>&1;
 		if [ $? -eq 0 ]; then
 			echo " OK."
 		else
@@ -243,43 +194,45 @@
 		;;
 
 	restart)
-		if test "$checkconfig" = "true"; then
-			printf "Running configuration check...\n"
-			check_config
+		printf "Running configuration check..."
+		$NagiosBin -v $NagiosCfgFile > /dev/null 2>&1;
+		if [ $? -eq 0 ]; then
+			echo "done."
+			$0 stop
+			$0 start
+		else
+			echo " CONFIG ERROR!  Restart aborted.  Check your Nagios configuration."
+			exit 1
 		fi
-
-		$0 stop
-		$0 start
 		;;
 
 	reload|force-reload)
-		if test "$checkconfig" = "true"; then
-			printf "Running configuration check...\n"
-			check_config
-		fi
-
-		if test ! -f $NagiosRunFile; then
-			$0 start
-		else
-			pid_nagios
-			if status_nagios > /dev/null; then
-				printf "Reloading nagios configuration...\n"
-				killproc_nagios HUP
-				echo "done"
-			else
-				$0 stop
+		printf "Running configuration check..."
+		$NagiosBin -v $NagiosCfgFile > /dev/null 2>&1;
+		if [ $? -eq 0 ]; then
+			echo "done."
+			if test ! -f $NagiosRunFile; then
 				$0 start
+			else
+				pid_nagios
+				if status_nagios > /dev/null; then
+					printf "Reloading nagios configuration..."
+					killproc_nagios nagios -HUP
+					echo "done"
+				else
+					$0 stop
+					$0 start
+				fi
 			fi
+		else
+			echo " CONFIG ERROR!  Reload aborted.  Check your Nagios configuration."
+			exit 1
 		fi
 		;;
 
-	configtest)
-		$NagiosBin -vp $NagiosCfgFile
-		;;
-
 	*)
-		echo "Usage: nagios {start|stop|restart|reload|force-reload|status|checkconfig|configtest}"
-		exit 1
+		echo "Usage: nagios {start|stop|restart|reload|force-reload|status|checkconfig}"
+		exit 2
 		;;
 
 esac
