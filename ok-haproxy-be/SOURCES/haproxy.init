#!/bin/sh
#
# chkconfig: - 85 15
# description: HA-Proxy is a TCP/HTTP reverse proxy which is particularly suited \
#              for high availability environments.
# processname: haproxy
# config: /opt/haproxy/conf/haproxy.cfg
# pidfile: /var/run/haproxy.pid

. /etc/init.d/functions

# This is our service name
BASENAME=haproxy-be

# Our pid file
PIDFILE=/var/run/$BASENAME.pid

[ -f /opt/haproxy-be/conf/haproxy-be.cfg ] || exit 1

RETVAL=0

start() {
  /opt/haproxy-be/bin/haproxy-be -c -q -f /opt/haproxy-be/conf/haproxy-be.cfg
  if [ $? -ne 0 ]; then
    echo "Errors found in configuration file, check it with '$BASENAME check'."
    return 1
  fi

  echo -n "Starting $BASENAME: "
  /opt/haproxy-be/bin/haproxy-be -D -f /opt/haproxy-be/conf/haproxy-be.cfg -p $PIDFILE
  RETVAL=$?
  echo
  return $RETVAL
}

stop() {
  echo -n "Shutting down $BASENAME: "
  PID=`cat $PIDFILE`
  if [ "$PID" == "" ]; then
    echo "Not running!"
    return 1
  fi
  kill -USR1 $PID
  RETVAL=$?
  echo
  [ $RETVAL -eq 0 ] && rm -f $PIDFILE
  return $RETVAL
}

reload() {
  /opt/haproxy-be/bin/haproxy-be -c -q -f /opt/haproxy-be/conf/haproxy-be.cfg
  if [ $? -ne 0 ]; then
    echo "Errors found in configuration file, check it with '$BASENAME check'."
    return 1
  fi

  echo -n "Reloading $BASENAME: "
  /opt/haproxy-be/bin/haproxy-be -f /opt/haproxy-be/conf/haproxy-be.cfg -p $PIDFILE -sf $(<$PIDFILE)
  RETVAL=$?
  echo
  return $RETVAL
}

restart() {
  /opt/haproxy-be/bin/haproxy-be -c -q -f /opt/haproxy-be/conf/haproxy-be.cfg
  if [ $? -ne 0 ]; then
    echo "Errors found in configuration file, check it with '$BASENAME check'."
    return 1
  fi

  echo -n "Restarting $BASENAME: "
  /opt/haproxy-be/bin/haproxy-be -f /opt/haproxy-be/conf/haproxy-be.cfg -p $PIDFILE -st $(<$PIDFILE)
  RETVAL=$?
  echo
  return $RETVAL
}

check() {
  /opt/haproxy-be/bin/haproxy-be -c -q -V -f /opt/haproxy-be/conf/haproxy-be.cfg
}

rh_status() {
    status -p $PIDFILE $BASENAME
}

rh_status_q() {
    rh_status >/dev/null 2>&1
}


# See how we were called.
case "$1" in
  start)
    rh_status_q && exit 0
    start
    ;;
  stop)
    rh_status_q || exit 0
    stop
    ;;
  restart)
    restart
    ;;
  force-restart)
    stop
    start
    ;;
  reload)
    reload
    ;;
  check)
    check
    ;;
  status)
    rh_status
    RETVAL=$?
    ;;
  *)
    echo $"Usage: $BASENAME {start|stop|restart|reload|force-restart|status|check}"
    RETVAL=1
esac

exit $RETVAL
